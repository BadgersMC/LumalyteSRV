import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

plugins {
  id 'com.gradleup.shadow' version '8.3.0'
  id 'java-library'
}

version = project.version

configurations {
  shade
}

repositories {
  maven {
    name = 'papermc'
    url = 'https://repo.papermc.io/repository/maven-public/'
  }
  maven {
    name = 'jitpack'
    url = 'https://jitpack.io'
  }
}

dependencies {
  compileOnly("com.velocitypowered:velocity-api:$velocity_version") {
    changing = true
  }
  annotationProcessor("com.velocitypowered:velocity-api:$velocity_version") {
    changing = true
  }

  implementation("net.dv8tion:JDA:$jda_version") {
    exclude module: 'opus-java'
  }

  compileOnly "net.kyori:adventure-text-minimessage:$minimessage_version"

  implementation "com.electronwill.night-config:toml:$night_config_version"
  implementation "com.github.unilock:yeplib:$yeplib_version"
  // implementation("com.mysql:mysql-connector-j:$mysql_version")
  implementation ("org.mariadb.jdbc:mariadb-java-client:$mariadb_version")
  implementation ("com.zaxxer:HikariCP:$hikaricp_version")

  testImplementation platform("org.junit:junit-bom:$junit_version")
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation "com.electronwill.night-config:toml:$night_config_version"

  compileOnly 'net.luckperms:api:5.4'
}

shadowJar {
  setArchiveClassifier(null)
  relocate("net.dv8tion", "ooo.foooooooooooo.velocitydiscord.lib.net.dv8tion")
  relocate("org.mariadb", "ooo.foooooooooooo.velocitydiscord.lib.org.mariadb")
  transform(ServiceFileTransformer) {
    path = 'META-INF/services/java.sql.Driver'
  }
}

build {
  dependsOn shadowJar
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true
  }
}
